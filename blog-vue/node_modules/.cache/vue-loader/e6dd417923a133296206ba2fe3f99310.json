{"remainingRequest":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Program Files\\_MY\\项目\\博客\\blog-master\\src\\views\\Types.vue?vue&type=template&id=73763a2f&scoped=true&","dependencies":[{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\src\\views\\Types.vue","mtime":1705065876000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}