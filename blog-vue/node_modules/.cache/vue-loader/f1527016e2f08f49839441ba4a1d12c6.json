{"remainingRequest":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Program Files\\_MY\\项目\\博客\\blog-master\\src\\views\\admin\\Types2.vue?vue&type=style&index=0&id=0f7f52ac&lang=less&scoped=true&","dependencies":[{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\src\\views\\admin\\Types2.vue","mtime":1705065876000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\_MY\\项目\\博客\\blog-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9jc3MvbWUuY3NzIjsKQGltcG9ydCAiLi4vLi4vYXNzZXRzL2Nzcy9zdHlsZS5jc3MiOwo="},{"version":3,"sources":["Types2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsWA;AACA","file":"Types2.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"blogs\">\n    <div class=\"content-header\">\n      <h1>博客管理<small></small></h1>\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\" class=\"breadcrumb\">\n        <el-breadcrumb-item >后台管理</el-breadcrumb-item>\n        <el-breadcrumb-item>博客管理</el-breadcrumb-item>\n        <el-breadcrumb-item>分类管理</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n\n    <!--中间内容-->\n    <div class=\"app-container\">\n      <div class=\"box\">\n\n        <div class=\"filter-container\">\n          \n\n\n\n\n\n        \n\n          <el-button type=\"primary\" class=\"butT\" @click=\"dialogFormVisible1=true\" style=\"margin-left:50px\">添加分类</el-button>\n\n\n        </div>\n\n      <div class=\"ui container\">\n        <el-table size=\"middle\" current-row-key=\"id\" :data=\"typeList\" stripe highlight-current-row>\n          <!--                        id,用户名，真实姓名，角色，备注，最后登录时间，创建时间-->\n          <el-table-column prop=\"typeid\" min-width=\"15px\" align=\"center\" label=\"序号\"></el-table-column>\n          <el-table-column prop=\"typename\" label=\"分类名称\" align=\"center\"></el-table-column>\n          <el-table-column label=\"管理\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.typeid)\">删除</el-button>\n            <el-button size=\"mini\" type=\"success\" @click=\"handleUpdate(scope.row.typeid)\">编辑</el-button>\n\n              <!--              <el-button size=\"mini\" type=\"info\" @click=\"handleForbidden(scope.row)\">禁用</el-button>-->\n            </template>\n          </el-table-column>\n        </el-table>\n        <div class=\"pagination-container\">\n          <el-pagination\n            class=\"pagiantion\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pagination.currentPage\"\n            :page-sizes=\"[2,5,10,15]\"\n            :page-size=\"pagination.pageSize\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"pagination.total\">\n          </el-pagination>\n        </div>\n       \n       \n        <!-- 新增标签弹层 手机号 真实姓名（*） 密码 备注 角色   el-dialog 组件 -->\n      \n       <div class=\"add-form\">\n\n\n\n         <el-dialog title=\"新增分类\" :visible.sync=\"dialogFormVisible1\">\n         \n         \n           <el-form ref=\"dataAddForm\" :model=\"formData\" :rules=\"rules\" label-position=\"right\"  label-width=\"100px\">\n             <el-row>\n               \n               <el-col :span=\"12\">\n                 <el-form-item label=\"分类名\" prop=\"typename\">\n                   <el-input v-model=\"formData.typename\"/>\n                 </el-form-item>\n               </el-col>\n             </el-row>\n\n\n             \n           </el-form>\n\n\n\n           <div slot=\"footer\" class=\"dialog-footer\">\n             <el-button @click=\"cancel1\">取消</el-button>\n             <el-button type=\"primary\" @click=\"handleAdd()\">确定</el-button>\n           </div>\n         </el-dialog>\n\n\n       </div>\n\n\n\n\n\n\n\n\n<!--                  修改    -->\n         <el-dialog title=\"编辑分类\" :visible.sync=\"dialogFormVisible2\">\n         \n         \n           <el-form ref=\"dataAddForm\" :model=\"formData\" :rules=\"rules\" label-position=\"right\"  label-width=\"100px\">\n             <el-row>\n               \n               <el-col :span=\"12\">\n                 <el-form-item label=\"分类名\" prop=\"typename\">\n                   <el-input v-model=\"formData.typename\"/>\n                 </el-form-item>\n               </el-col>\n             </el-row>\n\n\n             \n           </el-form>\n\n\n\n           <div slot=\"footer\" class=\"dialog-footer\">\n             <el-button @click=\"cancel2\">取消</el-button>\n             <el-button type=\"primary\" @click=\"Update\">确定</el-button>\n           </div>\n         </el-dialog>\n\n\n\n\n\n          <AddTypes ref=\"addTypes\"></AddTypes>\n\n\n\n\n      </div>\n    </div>\n    </div>\n    <br>\n    <br>\n  </div>\n</template>\n\n\n<script>\n\nimport AddTypes from '../../components/admin/AddTypes'\n\n\nexport default {\n  components: {\n    AddTypes\n  },\n  data () {\n\n    return {\n\n\n      pagination: { // 分页相关模型数据\n        currentPage: 1, // 当前页码\n        pageSize: 10, // 每页显示的记录数\n        total: 0, // 总记录数\n        queryString: null // 查询条件\n      },\n\n                  //  对话框 中的 表单数据\n      formData: {\n        typeid:'',\n        typename:''\n      }, \n\n\n      dialogFormVisible1: false, // 编辑表单是否可见\n      dialogFormVisible2: false, // 编辑表单是否可见\n     \n     typeList: [], // 当前页要展示的   分类名\n\n\n      user: {},\n      nickname: '',\n      // 被激活的链接地址\n      avatar: '',\n\n\n      rules: { // 校验规则\n       \n       \n       // 分类名称\n        typename: [\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\n          { min: 2, max: 15, message: '长度在 2 到 15 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n\n\n  created () {\n    this.getTypeList()\n  },\n\n\n  methods: {\n\n\n    cancel1(){\n      this.dialogFormVisible1=false\n      this.formData.typename= ''\n    },\n\n    cancel2(){\n      this.dialogFormVisible2=false\n      this.formData.typename= ''\n    },\n  getTypeList () {\n     \n          this.$axios.get('/home/getType').then(res=>{\n              console.log('type',res.data)\n             this.typeList = res.data.data \n           \n     })     \n\n    },\n\n  \n\n      // 添加按钮\n  handleAdd () {\n    \n          \n          this.$axios.post('/type', this.formData).then((res) => {\n            // 关闭新增窗口\n            this.dialogFormVisible1 = false\n             this.formData.typename = ''\n            if (res.data.flag) {\n              // 新增成功后，重新调用分页查询方法，查询出最新的数据\n              this.getTypeList()\n              // 弹出提示信息\n              this.$message({\n                message: '添加成功',\n                type: 'success'\n              })\n            } else { // 执行失败\n              this.$message.error(res.data.code)\n            }\n          })\n \n    },\n\n\n\n      //   修改 \n\n\n      handleUpdate(typeid){\n\n            this.dialogFormVisible2=true\n            sessionStorage.setItem('typeid',typeid)\n\n      },\n\n\n      Update(){\n        this.formData.typeid = sessionStorage.getItem('typeid')\n\n        \n        console.log(this.formData.typeid)\nthis.$axios.put('/type', this.formData).then((res) => {\n            // 关闭编辑窗口\n            this.dialogFormVisible2 = false\n             this.formData.typename = ''\n            if (res.data.flag) {\n              // 修改成功后，重新调用分页查询方法，查询出最新的数据\n              this.getTypeList()\n              // 弹出提示信息\n              this.$message({\n                message: '编辑成功',\n                type: 'success'\n              })\n            } else { // 执行失败\n              this.$message.error(res.data.code)\n            }\n          })\n\n      },\n\n\n\n    /// 处理  删除 分类  的操作\n\n\n\n     handleDelete (typeid){\n     \n\n\n     this.$confirm(\"此操作永久删除当前信息，是否继续？\",\"提示\",{type:\"info\"}).then(()=>{\n           \n                    this.$axios.delete('/type/'+typeid).then((res)=>{\n\n\n                            if(res.data.flag)\n                            this.$message.success(\"删除成功\")\n\n                      this.getTypeList()\n                       \n\n\n                    })\n                }).catch(()=>{\n                    this.$message.info(\"取消操作\");\n\n    \n\n      \n         \n\n     })\n    },\n\n\n    \n    logout () {\n      window.sessionStorage.clear()\n      this.$router.push('/login')\n      // 刷新页面，删除vuex数据\n      window.location.reload()\n    },\n\n\n\n    // 切换页码\n    handleCurrentChange (currentPage) {\n      // 设置最新的页码\n      this.pagination.currentPage = currentPage\n      // 重新调用getTypeList\n      this.getTypeList()\n    },\n\n\n    handleSizeChange (newSize) {\n      this.pagination.pageSize = newSize\n      this.getTypeList()\n    },\n\n\n\n    // 弹出添加窗口\n    handleCreate () {\n      // this.dialogFormVisible = true\n      this.$refs.addTypes.handleCreate()\n    }\n\n\n   \n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  @import \"../../assets/css/me.css\";\n  @import \"../../assets/css/style.css\";\n</style>\n"]}]}